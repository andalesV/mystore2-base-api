/*
 * This file is generated by jOOQ.
*/
package com.mystore2.data.tables.records;


import com.mystore2.data.enums.StatusEnum;
import com.mystore2.data.tables.SaleOrder;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SaleOrderRecord extends UpdatableRecordImpl<SaleOrderRecord> implements Record5<Integer, String, StatusEnum, Timestamp, Timestamp> {

    private static final long serialVersionUID = 1928825396;

    /**
     * Setter for <code>public.sale_order.id</code>.
     */
    public SaleOrderRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.sale_order.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.sale_order.customer_name</code>.
     */
    public SaleOrderRecord setCustomerName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.sale_order.customer_name</code>.
     */
    public String getCustomerName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.sale_order.status</code>.
     */
    public SaleOrderRecord setStatus(StatusEnum value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.sale_order.status</code>.
     */
    public StatusEnum getStatus() {
        return (StatusEnum) get(2);
    }

    /**
     * Setter for <code>public.sale_order.created_date</code>.
     */
    public SaleOrderRecord setCreatedDate(Timestamp value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.sale_order.created_date</code>.
     */
    public Timestamp getCreatedDate() {
        return (Timestamp) get(3);
    }

    /**
     * Setter for <code>public.sale_order.last_modified_date</code>.
     */
    public SaleOrderRecord setLastModifiedDate(Timestamp value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.sale_order.last_modified_date</code>.
     */
    public Timestamp getLastModifiedDate() {
        return (Timestamp) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, String, StatusEnum, Timestamp, Timestamp> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, String, StatusEnum, Timestamp, Timestamp> valuesRow() {
        return (Row5) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return SaleOrder.SALE_ORDER.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return SaleOrder.SALE_ORDER.CUSTOMER_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<StatusEnum> field3() {
        return SaleOrder.SALE_ORDER.STATUS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field4() {
        return SaleOrder.SALE_ORDER.CREATED_DATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field5() {
        return SaleOrder.SALE_ORDER.LAST_MODIFIED_DATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getCustomerName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StatusEnum value3() {
        return getStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value4() {
        return getCreatedDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value5() {
        return getLastModifiedDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SaleOrderRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SaleOrderRecord value2(String value) {
        setCustomerName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SaleOrderRecord value3(StatusEnum value) {
        setStatus(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SaleOrderRecord value4(Timestamp value) {
        setCreatedDate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SaleOrderRecord value5(Timestamp value) {
        setLastModifiedDate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SaleOrderRecord values(Integer value1, String value2, StatusEnum value3, Timestamp value4, Timestamp value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SaleOrderRecord
     */
    public SaleOrderRecord() {
        super(SaleOrder.SALE_ORDER);
    }

    /**
     * Create a detached, initialised SaleOrderRecord
     */
    public SaleOrderRecord(Integer id, String customerName, StatusEnum status, Timestamp createdDate, Timestamp lastModifiedDate) {
        super(SaleOrder.SALE_ORDER);

        set(0, id);
        set(1, customerName);
        set(2, status);
        set(3, createdDate);
        set(4, lastModifiedDate);
    }
}
