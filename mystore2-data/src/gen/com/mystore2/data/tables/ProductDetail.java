/*
 * This file is generated by jOOQ.
*/
package com.mystore2.data.tables;


import com.mystore2.data.Keys;
import com.mystore2.data.Public;
import com.mystore2.data.tables.records.ProductDetailRecord;

import java.math.BigDecimal;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProductDetail extends TableImpl<ProductDetailRecord> {

    private static final long serialVersionUID = 2097501771;

    /**
     * The reference instance of <code>public.product_detail</code>
     */
    public static final ProductDetail PRODUCT_DETAIL = new ProductDetail();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ProductDetailRecord> getRecordType() {
        return ProductDetailRecord.class;
    }

    /**
     * The column <code>public.product_detail.id</code>.
     */
    public final TableField<ProductDetailRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('product_detail_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.product_detail.isavailable</code>.
     */
    public final TableField<ProductDetailRecord, Boolean> ISAVAILABLE = createField("isavailable", org.jooq.impl.SQLDataType.BOOLEAN.defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>public.product_detail.quantity</code>.
     */
    public final TableField<ProductDetailRecord, Integer> QUANTITY = createField("quantity", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.product_detail.price</code>.
     */
    public final TableField<ProductDetailRecord, BigDecimal> PRICE = createField("price", org.jooq.impl.SQLDataType.NUMERIC.precision(12, 2), this, "");

    /**
     * The column <code>public.product_detail.product_id</code>.
     */
    public final TableField<ProductDetailRecord, Integer> PRODUCT_ID = createField("product_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>public.product_detail</code> table reference
     */
    public ProductDetail() {
        this("product_detail", null);
    }

    /**
     * Create an aliased <code>public.product_detail</code> table reference
     */
    public ProductDetail(String alias) {
        this(alias, PRODUCT_DETAIL);
    }

    private ProductDetail(String alias, Table<ProductDetailRecord> aliased) {
        this(alias, aliased, null);
    }

    private ProductDetail(String alias, Table<ProductDetailRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ProductDetailRecord, Integer> getIdentity() {
        return Keys.IDENTITY_PRODUCT_DETAIL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ProductDetailRecord> getPrimaryKey() {
        return Keys.PRODUCT_DETAIL_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ProductDetailRecord>> getKeys() {
        return Arrays.<UniqueKey<ProductDetailRecord>>asList(Keys.PRODUCT_DETAIL_PKEY, Keys.PRODUCT_DETAIL_ID_PRODUCT_ID_KEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<ProductDetailRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ProductDetailRecord, ?>>asList(Keys.PRODUCT_DETAIL__PRODUCT_DETAIL_PRODUCT_ID_FKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProductDetail as(String alias) {
        return new ProductDetail(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ProductDetail rename(String name) {
        return new ProductDetail(name, null);
    }
}
